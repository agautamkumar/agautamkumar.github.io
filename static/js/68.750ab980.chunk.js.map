{"version":3,"sources":["example-components/FormsTypeahead/FormsTypeaheadBasic/index.js","example-components/FormsTypeahead/FormsTypeaheadSizing/index.js","example-components/FormsTypeahead/FormsTypeaheadInputGroups/index.js","example-components/FormsTypeahead/FormsTypeaheadMultiple/index.js","example-pages/FormsTypeahead/index.js"],"names":["options","name","population","capital","region","LivePreviewExample","id","labelKey","multiple","placeholder","Component","state","bsSize","undefined","this","radios","label","value","className","map","FormGroup","key","check","inline","CustomInput","checked","onChange","setState","type","getInitialState","index","Math","floor","random","length","selected","isInvalid","isValid","isMatch","InputGroup","InputGroupAddon","addonType","InputGroupText","s","Button","outline","color","onClick","icon","defaultSelected","slice","FormsTypeahead","titleHeading","titleDescription","Row","Col","xl","sectionHeading"],"mappings":"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","file":"static/js/68.750ab980.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react';\n\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst options = [\n  {\n    name: 'Alabama',\n    population: 4780127,\n    capital: 'Montgomery',\n    region: 'South'\n  },\n  { name: 'Alaska', population: 710249, capital: 'Juneau', region: 'West' },\n  { name: 'Arizona', population: 6392307, capital: 'Phoenix', region: 'West' },\n  {\n    name: 'Arkansas',\n    population: 2915958,\n    capital: 'Little Rock',\n    region: 'South'\n  },\n  {\n    name: 'California',\n    population: 37254503,\n    capital: 'Sacramento',\n    region: 'West'\n  },\n  { name: 'Colorado', population: 5029324, capital: 'Denver', region: 'West' },\n  {\n    name: 'Connecticut',\n    population: 3574118,\n    capital: 'Hartford',\n    region: 'Northeast'\n  },\n  { name: 'Delaware', population: 897936, capital: 'Dover', region: 'South' },\n  {\n    name: 'Florida',\n    population: 18804623,\n    capital: 'Tallahassee',\n    region: 'South'\n  },\n  { name: 'Georgia', population: 9688681, capital: 'Atlanta', region: 'South' },\n  { name: 'Hawaii', population: 1360301, capital: 'Honolulu', region: 'West' },\n  { name: 'Idaho', population: 1567652, capital: 'Boise', region: 'West' },\n  {\n    name: 'Illinois',\n    population: 12831549,\n    capital: 'Springfield',\n    region: 'Midwest'\n  },\n  {\n    name: 'Indiana',\n    population: 6484229,\n    capital: 'Indianapolis',\n    region: 'Midwest'\n  },\n  {\n    name: 'Iowa',\n    population: 3046869,\n    capital: 'Des Moines',\n    region: 'Midwest'\n  },\n  { name: 'Kansas', population: 2853132, capital: 'Topeka', region: 'Midwest' },\n  {\n    name: 'Kentucky',\n    population: 4339349,\n    capital: 'Frankfort',\n    region: 'South'\n  },\n  {\n    name: 'Louisiana',\n    population: 4533479,\n    capital: 'Baton Rouge',\n    region: 'South'\n  },\n  {\n    name: 'Maine',\n    population: 1328361,\n    capital: 'Augusta',\n    region: 'Northeast'\n  },\n  {\n    name: 'Maryland',\n    population: 5773785,\n    capital: 'Annapolis',\n    region: 'South'\n  },\n  {\n    name: 'Massachusetts',\n    population: 6547817,\n    capital: 'Boston',\n    region: 'Northeast'\n  },\n  {\n    name: 'Michigan',\n    population: 9884129,\n    capital: 'Lansing',\n    region: 'Midwest'\n  },\n  {\n    name: 'Minnesota',\n    population: 5303925,\n    capital: 'Saint Paul',\n    region: 'Midwest'\n  },\n  {\n    name: 'Mississippi',\n    population: 2968103,\n    capital: 'Jackson',\n    region: 'South'\n  },\n  {\n    name: 'Missouri',\n    population: 5988927,\n    capital: 'Jefferson City',\n    region: 'Midwest'\n  },\n  { name: 'Montana', population: 989417, capital: 'Alberta', region: 'West' },\n  {\n    name: 'Nebraska',\n    population: 1826341,\n    capital: 'Lincoln',\n    region: 'Midwest'\n  },\n  {\n    name: 'Nevada',\n    population: 2700691,\n    capital: 'Carson City',\n    region: 'West'\n  },\n  {\n    name: 'New Hampshire',\n    population: 1316466,\n    capital: 'Concord',\n    region: 'Northeast'\n  },\n  {\n    name: 'New Jersey',\n    population: 8791936,\n    capital: 'Trenton',\n    region: 'Northeast'\n  },\n  {\n    name: 'New Mexico',\n    population: 2059192,\n    capital: 'Santa Fe',\n    region: 'West'\n  },\n  {\n    name: 'New York',\n    population: 19378087,\n    capital: 'Albany',\n    region: 'Northeast'\n  },\n  {\n    name: 'North Carolina',\n    population: 9535692,\n    capital: 'Raleigh',\n    region: 'South'\n  },\n  {\n    name: 'North Dakota',\n    population: 672591,\n    capital: 'Bismarck',\n    region: 'Midwest'\n  },\n  {\n    name: 'Ohio',\n    population: 11536725,\n    capital: 'Columbus',\n    region: 'Midwest'\n  },\n  {\n    name: 'Oklahoma',\n    population: 3751616,\n    capital: 'Oklahoma City',\n    region: 'South'\n  },\n  { name: 'Oregon', population: 3831073, capital: 'Salem', region: 'West' },\n  {\n    name: 'Pennsylvania',\n    population: 12702887,\n    capital: 'Harrisburg',\n    region: 'Northeast'\n  },\n  {\n    name: 'Rhode Island',\n    population: 1052931,\n    capital: 'Providence',\n    region: 'Northeast'\n  },\n  {\n    name: 'South Carolina',\n    population: 4625401,\n    capital: 'Columbia',\n    region: 'South'\n  },\n  {\n    name: 'South Dakota',\n    population: 814191,\n    capital: 'Pierre',\n    region: 'Midwest'\n  },\n  {\n    name: 'Tennessee',\n    population: 6346275,\n    capital: 'Nashville',\n    region: 'South'\n  },\n  { name: 'Texas', population: 25146105, capital: 'Austin', region: 'South' },\n  {\n    name: 'Utah',\n    population: 2763888,\n    capital: 'Salt Lake City',\n    region: 'West'\n  },\n  {\n    name: 'Vermont',\n    population: 625745,\n    capital: 'Montpelier',\n    region: 'Northeast'\n  },\n  {\n    name: 'Virginia',\n    population: 8001045,\n    capital: 'Richmond',\n    region: 'South'\n  },\n  {\n    name: 'Washington',\n    population: 6724543,\n    capital: 'Olympia',\n    region: 'West'\n  },\n  {\n    name: 'West Virginia',\n    population: 1853011,\n    capital: 'Charleston',\n    region: 'South'\n  },\n  {\n    name: 'Wisconsin',\n    population: 5687289,\n    capital: 'Madison',\n    region: 'West'\n  },\n  { name: 'Wyoming', population: 563767, capital: 'Cheyenne', region: 'West' }\n];\n\nexport default class LivePreviewExample extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Typeahead\n          id=\"typeID2\"\n          labelKey=\"name\"\n          multiple={false}\n          options={options}\n          placeholder=\"Choose a state...\"\n        />\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment, Component } from 'react';\n\nimport { CustomInput, FormGroup } from 'reactstrap';\n\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst options = [\n  {\n    name: 'Alabama',\n    population: 4780127,\n    capital: 'Montgomery',\n    region: 'South'\n  },\n  { name: 'Alaska', population: 710249, capital: 'Juneau', region: 'West' },\n  { name: 'Arizona', population: 6392307, capital: 'Phoenix', region: 'West' },\n  {\n    name: 'Arkansas',\n    population: 2915958,\n    capital: 'Little Rock',\n    region: 'South'\n  },\n  {\n    name: 'California',\n    population: 37254503,\n    capital: 'Sacramento',\n    region: 'West'\n  },\n  { name: 'Colorado', population: 5029324, capital: 'Denver', region: 'West' },\n  {\n    name: 'Connecticut',\n    population: 3574118,\n    capital: 'Hartford',\n    region: 'Northeast'\n  },\n  { name: 'Delaware', population: 897936, capital: 'Dover', region: 'South' },\n  {\n    name: 'Florida',\n    population: 18804623,\n    capital: 'Tallahassee',\n    region: 'South'\n  },\n  { name: 'Georgia', population: 9688681, capital: 'Atlanta', region: 'South' },\n  { name: 'Hawaii', population: 1360301, capital: 'Honolulu', region: 'West' },\n  { name: 'Idaho', population: 1567652, capital: 'Boise', region: 'West' },\n  {\n    name: 'Illinois',\n    population: 12831549,\n    capital: 'Springfield',\n    region: 'Midwest'\n  },\n  {\n    name: 'Indiana',\n    population: 6484229,\n    capital: 'Indianapolis',\n    region: 'Midwest'\n  },\n  {\n    name: 'Iowa',\n    population: 3046869,\n    capital: 'Des Moines',\n    region: 'Midwest'\n  },\n  { name: 'Kansas', population: 2853132, capital: 'Topeka', region: 'Midwest' },\n  {\n    name: 'Kentucky',\n    population: 4339349,\n    capital: 'Frankfort',\n    region: 'South'\n  },\n  {\n    name: 'Louisiana',\n    population: 4533479,\n    capital: 'Baton Rouge',\n    region: 'South'\n  },\n  {\n    name: 'Maine',\n    population: 1328361,\n    capital: 'Augusta',\n    region: 'Northeast'\n  },\n  {\n    name: 'Maryland',\n    population: 5773785,\n    capital: 'Annapolis',\n    region: 'South'\n  },\n  {\n    name: 'Massachusetts',\n    population: 6547817,\n    capital: 'Boston',\n    region: 'Northeast'\n  },\n  {\n    name: 'Michigan',\n    population: 9884129,\n    capital: 'Lansing',\n    region: 'Midwest'\n  },\n  {\n    name: 'Minnesota',\n    population: 5303925,\n    capital: 'Saint Paul',\n    region: 'Midwest'\n  },\n  {\n    name: 'Mississippi',\n    population: 2968103,\n    capital: 'Jackson',\n    region: 'South'\n  },\n  {\n    name: 'Missouri',\n    population: 5988927,\n    capital: 'Jefferson City',\n    region: 'Midwest'\n  },\n  { name: 'Montana', population: 989417, capital: 'Alberta', region: 'West' },\n  {\n    name: 'Nebraska',\n    population: 1826341,\n    capital: 'Lincoln',\n    region: 'Midwest'\n  },\n  {\n    name: 'Nevada',\n    population: 2700691,\n    capital: 'Carson City',\n    region: 'West'\n  },\n  {\n    name: 'New Hampshire',\n    population: 1316466,\n    capital: 'Concord',\n    region: 'Northeast'\n  },\n  {\n    name: 'New Jersey',\n    population: 8791936,\n    capital: 'Trenton',\n    region: 'Northeast'\n  },\n  {\n    name: 'New Mexico',\n    population: 2059192,\n    capital: 'Santa Fe',\n    region: 'West'\n  },\n  {\n    name: 'New York',\n    population: 19378087,\n    capital: 'Albany',\n    region: 'Northeast'\n  },\n  {\n    name: 'North Carolina',\n    population: 9535692,\n    capital: 'Raleigh',\n    region: 'South'\n  },\n  {\n    name: 'North Dakota',\n    population: 672591,\n    capital: 'Bismarck',\n    region: 'Midwest'\n  },\n  {\n    name: 'Ohio',\n    population: 11536725,\n    capital: 'Columbus',\n    region: 'Midwest'\n  },\n  {\n    name: 'Oklahoma',\n    population: 3751616,\n    capital: 'Oklahoma City',\n    region: 'South'\n  },\n  { name: 'Oregon', population: 3831073, capital: 'Salem', region: 'West' },\n  {\n    name: 'Pennsylvania',\n    population: 12702887,\n    capital: 'Harrisburg',\n    region: 'Northeast'\n  },\n  {\n    name: 'Rhode Island',\n    population: 1052931,\n    capital: 'Providence',\n    region: 'Northeast'\n  },\n  {\n    name: 'South Carolina',\n    population: 4625401,\n    capital: 'Columbia',\n    region: 'South'\n  },\n  {\n    name: 'South Dakota',\n    population: 814191,\n    capital: 'Pierre',\n    region: 'Midwest'\n  },\n  {\n    name: 'Tennessee',\n    population: 6346275,\n    capital: 'Nashville',\n    region: 'South'\n  },\n  { name: 'Texas', population: 25146105, capital: 'Austin', region: 'South' },\n  {\n    name: 'Utah',\n    population: 2763888,\n    capital: 'Salt Lake City',\n    region: 'West'\n  },\n  {\n    name: 'Vermont',\n    population: 625745,\n    capital: 'Montpelier',\n    region: 'Northeast'\n  },\n  {\n    name: 'Virginia',\n    population: 8001045,\n    capital: 'Richmond',\n    region: 'South'\n  },\n  {\n    name: 'Washington',\n    population: 6724543,\n    capital: 'Olympia',\n    region: 'West'\n  },\n  {\n    name: 'West Virginia',\n    population: 1853011,\n    capital: 'Charleston',\n    region: 'South'\n  },\n  {\n    name: 'Wisconsin',\n    population: 5687289,\n    capital: 'Madison',\n    region: 'West'\n  },\n  { name: 'Wyoming', population: 563767, capital: 'Cheyenne', region: 'West' }\n];\n\nexport default class LivePreviewExample extends Component {\n  state = {\n    bsSize: undefined\n  };\n\n  render() {\n    const { bsSize } = this.state;\n    const radios = [\n      { label: 'Small', value: 'small' },\n      { label: 'Default', value: undefined },\n      { label: 'Large', value: 'large' }\n    ];\n\n    return (\n      <Fragment>\n        <Typeahead\n          bsSize={bsSize}\n          labelKey=\"name\"\n          id=\"key1\"\n          options={options}\n          placeholder=\"Choose a state...\"\n        />\n        <div className=\"mt-4\">\n          {radios.map(({ label, value }) => (\n            <FormGroup key={value || 'default'} check inline>\n              <CustomInput\n                checked={bsSize === value}\n                onChange={() => this.setState({ bsSize: value })}\n                type=\"radio\"\n                value={value}\n                id={value || 'default'}\n                label={label}\n              />\n            </FormGroup>\n          ))}\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment, Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormGroup,\n  Button\n} from 'reactstrap';\n\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst options = [\n  {\n    name: 'Alabama',\n    population: 4780127,\n    capital: 'Montgomery',\n    region: 'South'\n  },\n  { name: 'Alaska', population: 710249, capital: 'Juneau', region: 'West' },\n  { name: 'Arizona', population: 6392307, capital: 'Phoenix', region: 'West' },\n  {\n    name: 'Arkansas',\n    population: 2915958,\n    capital: 'Little Rock',\n    region: 'South'\n  },\n  {\n    name: 'California',\n    population: 37254503,\n    capital: 'Sacramento',\n    region: 'West'\n  },\n  { name: 'Colorado', population: 5029324, capital: 'Denver', region: 'West' },\n  {\n    name: 'Connecticut',\n    population: 3574118,\n    capital: 'Hartford',\n    region: 'Northeast'\n  },\n  { name: 'Delaware', population: 897936, capital: 'Dover', region: 'South' },\n  {\n    name: 'Florida',\n    population: 18804623,\n    capital: 'Tallahassee',\n    region: 'South'\n  },\n  { name: 'Georgia', population: 9688681, capital: 'Atlanta', region: 'South' },\n  { name: 'Hawaii', population: 1360301, capital: 'Honolulu', region: 'West' },\n  { name: 'Idaho', population: 1567652, capital: 'Boise', region: 'West' },\n  {\n    name: 'Illinois',\n    population: 12831549,\n    capital: 'Springfield',\n    region: 'Midwest'\n  },\n  {\n    name: 'Indiana',\n    population: 6484229,\n    capital: 'Indianapolis',\n    region: 'Midwest'\n  },\n  {\n    name: 'Iowa',\n    population: 3046869,\n    capital: 'Des Moines',\n    region: 'Midwest'\n  },\n  { name: 'Kansas', population: 2853132, capital: 'Topeka', region: 'Midwest' },\n  {\n    name: 'Kentucky',\n    population: 4339349,\n    capital: 'Frankfort',\n    region: 'South'\n  },\n  {\n    name: 'Louisiana',\n    population: 4533479,\n    capital: 'Baton Rouge',\n    region: 'South'\n  },\n  {\n    name: 'Maine',\n    population: 1328361,\n    capital: 'Augusta',\n    region: 'Northeast'\n  },\n  {\n    name: 'Maryland',\n    population: 5773785,\n    capital: 'Annapolis',\n    region: 'South'\n  },\n  {\n    name: 'Massachusetts',\n    population: 6547817,\n    capital: 'Boston',\n    region: 'Northeast'\n  },\n  {\n    name: 'Michigan',\n    population: 9884129,\n    capital: 'Lansing',\n    region: 'Midwest'\n  },\n  {\n    name: 'Minnesota',\n    population: 5303925,\n    capital: 'Saint Paul',\n    region: 'Midwest'\n  },\n  {\n    name: 'Mississippi',\n    population: 2968103,\n    capital: 'Jackson',\n    region: 'South'\n  },\n  {\n    name: 'Missouri',\n    population: 5988927,\n    capital: 'Jefferson City',\n    region: 'Midwest'\n  },\n  { name: 'Montana', population: 989417, capital: 'Alberta', region: 'West' },\n  {\n    name: 'Nebraska',\n    population: 1826341,\n    capital: 'Lincoln',\n    region: 'Midwest'\n  },\n  {\n    name: 'Nevada',\n    population: 2700691,\n    capital: 'Carson City',\n    region: 'West'\n  },\n  {\n    name: 'New Hampshire',\n    population: 1316466,\n    capital: 'Concord',\n    region: 'Northeast'\n  },\n  {\n    name: 'New Jersey',\n    population: 8791936,\n    capital: 'Trenton',\n    region: 'Northeast'\n  },\n  {\n    name: 'New Mexico',\n    population: 2059192,\n    capital: 'Santa Fe',\n    region: 'West'\n  },\n  {\n    name: 'New York',\n    population: 19378087,\n    capital: 'Albany',\n    region: 'Northeast'\n  },\n  {\n    name: 'North Carolina',\n    population: 9535692,\n    capital: 'Raleigh',\n    region: 'South'\n  },\n  {\n    name: 'North Dakota',\n    population: 672591,\n    capital: 'Bismarck',\n    region: 'Midwest'\n  },\n  {\n    name: 'Ohio',\n    population: 11536725,\n    capital: 'Columbus',\n    region: 'Midwest'\n  },\n  {\n    name: 'Oklahoma',\n    population: 3751616,\n    capital: 'Oklahoma City',\n    region: 'South'\n  },\n  { name: 'Oregon', population: 3831073, capital: 'Salem', region: 'West' },\n  {\n    name: 'Pennsylvania',\n    population: 12702887,\n    capital: 'Harrisburg',\n    region: 'Northeast'\n  },\n  {\n    name: 'Rhode Island',\n    population: 1052931,\n    capital: 'Providence',\n    region: 'Northeast'\n  },\n  {\n    name: 'South Carolina',\n    population: 4625401,\n    capital: 'Columbia',\n    region: 'South'\n  },\n  {\n    name: 'South Dakota',\n    population: 814191,\n    capital: 'Pierre',\n    region: 'Midwest'\n  },\n  {\n    name: 'Tennessee',\n    population: 6346275,\n    capital: 'Nashville',\n    region: 'South'\n  },\n  { name: 'Texas', population: 25146105, capital: 'Austin', region: 'South' },\n  {\n    name: 'Utah',\n    population: 2763888,\n    capital: 'Salt Lake City',\n    region: 'West'\n  },\n  {\n    name: 'Vermont',\n    population: 625745,\n    capital: 'Montpelier',\n    region: 'Northeast'\n  },\n  {\n    name: 'Virginia',\n    population: 8001045,\n    capital: 'Richmond',\n    region: 'South'\n  },\n  {\n    name: 'Washington',\n    population: 6724543,\n    capital: 'Olympia',\n    region: 'West'\n  },\n  {\n    name: 'West Virginia',\n    population: 1853011,\n    capital: 'Charleston',\n    region: 'South'\n  },\n  {\n    name: 'Wisconsin',\n    population: 5687289,\n    capital: 'Madison',\n    region: 'West'\n  },\n  { name: 'Wyoming', population: 563767, capital: 'Cheyenne', region: 'West' }\n];\n\nconst getInitialState = () => ({\n  index: Math.floor(Math.random() * options.length),\n  selected: []\n});\n\nexport default class LivePreviewExample extends Component {\n  state = getInitialState();\n\n  render() {\n    const { index, selected } = this.state;\n    const state = options[index];\n\n    let isInvalid;\n    let isValid;\n\n    if (selected.length) {\n      const isMatch = selected[0].name === state.name;\n\n      // BS4 validation\n      isInvalid = !isMatch;\n      isValid = isMatch;\n    }\n\n    return (\n      <Fragment>\n        <FormGroup>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>The capital of {state.name} is</InputGroupText>\n            </InputGroupAddon>\n            <Typeahead\n              id=\"type3\"\n              isInvalid={isInvalid}\n              isValid={isValid}\n              labelKey=\"capital\"\n              onChange={s => this.setState({ selected: s })}\n              placeholder=\"Select a capital...\"\n              selected={selected}\n              options={options}\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button\n                outline\n                color=\"primary\"\n                onClick={() => this.setState(getInitialState())}>\n                <span className=\"btn-wrapper--icon\">\n                  <FontAwesomeIcon icon={['fas', 'search']} />\n                </span>\n                <span className=\"btn-wrapper--label\">Play Again</span>\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </FormGroup>\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment, Component } from 'react';\n\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst options = [\n  {\n    name: 'Alabama',\n    population: 4780127,\n    capital: 'Montgomery',\n    region: 'South'\n  },\n  { name: 'Alaska', population: 710249, capital: 'Juneau', region: 'West' },\n  { name: 'Arizona', population: 6392307, capital: 'Phoenix', region: 'West' },\n  {\n    name: 'Arkansas',\n    population: 2915958,\n    capital: 'Little Rock',\n    region: 'South'\n  },\n  {\n    name: 'California',\n    population: 37254503,\n    capital: 'Sacramento',\n    region: 'West'\n  },\n  { name: 'Colorado', population: 5029324, capital: 'Denver', region: 'West' },\n  {\n    name: 'Connecticut',\n    population: 3574118,\n    capital: 'Hartford',\n    region: 'Northeast'\n  },\n  { name: 'Delaware', population: 897936, capital: 'Dover', region: 'South' },\n  {\n    name: 'Florida',\n    population: 18804623,\n    capital: 'Tallahassee',\n    region: 'South'\n  },\n  { name: 'Georgia', population: 9688681, capital: 'Atlanta', region: 'South' },\n  { name: 'Hawaii', population: 1360301, capital: 'Honolulu', region: 'West' },\n  { name: 'Idaho', population: 1567652, capital: 'Boise', region: 'West' },\n  {\n    name: 'Illinois',\n    population: 12831549,\n    capital: 'Springfield',\n    region: 'Midwest'\n  },\n  {\n    name: 'Indiana',\n    population: 6484229,\n    capital: 'Indianapolis',\n    region: 'Midwest'\n  },\n  {\n    name: 'Iowa',\n    population: 3046869,\n    capital: 'Des Moines',\n    region: 'Midwest'\n  },\n  { name: 'Kansas', population: 2853132, capital: 'Topeka', region: 'Midwest' },\n  {\n    name: 'Kentucky',\n    population: 4339349,\n    capital: 'Frankfort',\n    region: 'South'\n  },\n  {\n    name: 'Louisiana',\n    population: 4533479,\n    capital: 'Baton Rouge',\n    region: 'South'\n  },\n  {\n    name: 'Maine',\n    population: 1328361,\n    capital: 'Augusta',\n    region: 'Northeast'\n  },\n  {\n    name: 'Maryland',\n    population: 5773785,\n    capital: 'Annapolis',\n    region: 'South'\n  },\n  {\n    name: 'Massachusetts',\n    population: 6547817,\n    capital: 'Boston',\n    region: 'Northeast'\n  },\n  {\n    name: 'Michigan',\n    population: 9884129,\n    capital: 'Lansing',\n    region: 'Midwest'\n  },\n  {\n    name: 'Minnesota',\n    population: 5303925,\n    capital: 'Saint Paul',\n    region: 'Midwest'\n  },\n  {\n    name: 'Mississippi',\n    population: 2968103,\n    capital: 'Jackson',\n    region: 'South'\n  },\n  {\n    name: 'Missouri',\n    population: 5988927,\n    capital: 'Jefferson City',\n    region: 'Midwest'\n  },\n  { name: 'Montana', population: 989417, capital: 'Alberta', region: 'West' },\n  {\n    name: 'Nebraska',\n    population: 1826341,\n    capital: 'Lincoln',\n    region: 'Midwest'\n  },\n  {\n    name: 'Nevada',\n    population: 2700691,\n    capital: 'Carson City',\n    region: 'West'\n  },\n  {\n    name: 'New Hampshire',\n    population: 1316466,\n    capital: 'Concord',\n    region: 'Northeast'\n  },\n  {\n    name: 'New Jersey',\n    population: 8791936,\n    capital: 'Trenton',\n    region: 'Northeast'\n  },\n  {\n    name: 'New Mexico',\n    population: 2059192,\n    capital: 'Santa Fe',\n    region: 'West'\n  },\n  {\n    name: 'New York',\n    population: 19378087,\n    capital: 'Albany',\n    region: 'Northeast'\n  },\n  {\n    name: 'North Carolina',\n    population: 9535692,\n    capital: 'Raleigh',\n    region: 'South'\n  },\n  {\n    name: 'North Dakota',\n    population: 672591,\n    capital: 'Bismarck',\n    region: 'Midwest'\n  },\n  {\n    name: 'Ohio',\n    population: 11536725,\n    capital: 'Columbus',\n    region: 'Midwest'\n  },\n  {\n    name: 'Oklahoma',\n    population: 3751616,\n    capital: 'Oklahoma City',\n    region: 'South'\n  },\n  { name: 'Oregon', population: 3831073, capital: 'Salem', region: 'West' },\n  {\n    name: 'Pennsylvania',\n    population: 12702887,\n    capital: 'Harrisburg',\n    region: 'Northeast'\n  },\n  {\n    name: 'Rhode Island',\n    population: 1052931,\n    capital: 'Providence',\n    region: 'Northeast'\n  },\n  {\n    name: 'South Carolina',\n    population: 4625401,\n    capital: 'Columbia',\n    region: 'South'\n  },\n  {\n    name: 'South Dakota',\n    population: 814191,\n    capital: 'Pierre',\n    region: 'Midwest'\n  },\n  {\n    name: 'Tennessee',\n    population: 6346275,\n    capital: 'Nashville',\n    region: 'South'\n  },\n  { name: 'Texas', population: 25146105, capital: 'Austin', region: 'South' },\n  {\n    name: 'Utah',\n    population: 2763888,\n    capital: 'Salt Lake City',\n    region: 'West'\n  },\n  {\n    name: 'Vermont',\n    population: 625745,\n    capital: 'Montpelier',\n    region: 'Northeast'\n  },\n  {\n    name: 'Virginia',\n    population: 8001045,\n    capital: 'Richmond',\n    region: 'South'\n  },\n  {\n    name: 'Washington',\n    population: 6724543,\n    capital: 'Olympia',\n    region: 'West'\n  },\n  {\n    name: 'West Virginia',\n    population: 1853011,\n    capital: 'Charleston',\n    region: 'South'\n  },\n  {\n    name: 'Wisconsin',\n    population: 5687289,\n    capital: 'Madison',\n    region: 'West'\n  },\n  { name: 'Wyoming', population: 563767, capital: 'Cheyenne', region: 'West' }\n];\n\nexport default class LivePreviewExample extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Typeahead\n          id=\"typeID2\"\n          labelKey=\"name\"\n          multiple={true}\n          defaultSelected={options.slice(0, 2)}\n          options={options}\n          placeholder=\"Choose a state...\"\n        />\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Row, Col } from 'reactstrap';\nimport { PageTitle } from '../../layout-components';\n\nimport { ExampleWrapperSimple } from '../../layout-components';\nimport FormsTypeaheadBasic from '../../example-components/FormsTypeahead/FormsTypeaheadBasic';\nimport FormsTypeaheadSizing from '../../example-components/FormsTypeahead/FormsTypeaheadSizing';\nimport FormsTypeaheadInputGroups from '../../example-components/FormsTypeahead/FormsTypeaheadInputGroups';\nimport FormsTypeaheadMultiple from '../../example-components/FormsTypeahead/FormsTypeaheadMultiple';\nexport default function FormsTypeahead() {\n  return (\n    <Fragment>\n      <PageTitle\n        titleHeading=\"Typeahead\"\n        titleDescription=\"Create beautiful suggestion inputs for React form elements.\"\n      />\n\n      <Row>\n        <Col xl=\"6\">\n          <ExampleWrapperSimple sectionHeading=\"Basic\">\n            <FormsTypeaheadBasic />\n          </ExampleWrapperSimple>\n          <ExampleWrapperSimple sectionHeading=\"Sizing\">\n            <FormsTypeaheadSizing />\n          </ExampleWrapperSimple>\n        </Col>\n        <Col xl=\"6\">\n          <ExampleWrapperSimple sectionHeading=\"Multiple\">\n            <FormsTypeaheadMultiple />\n          </ExampleWrapperSimple>\n          <ExampleWrapperSimple sectionHeading=\"Input groups\">\n            <FormsTypeaheadInputGroups />\n          </ExampleWrapperSimple>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}