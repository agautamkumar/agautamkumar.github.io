{"version":3,"sources":["../node_modules/react-loki/es/LokiStep.js","../node_modules/react-loki/es/index.js","../node_modules/react-loki/es/LokiStepContainer.js","example-components/FormsWizard/FormsWizardHorizontal/index.js","example-components/FormsWizard/FormsWizardVertical/index.js","example-components/FormsWizard/FormsWizardIntegrationOne/index.js","example-components/FormsWizard/FormsWizardIntegrationTwo/index.js","example-pages/FormsWizard/index.js"],"names":["LokiStep","_ref","currentStep","step","stepsDone","totalSteps","isLokiComplete","goTo","isActive","index","isComplete","isDisabled","React","createElement","className","href","onClick","event","preventDefault","disabled","icon","propTypes","_class","_temp2","LokiStepContainer","children","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","Loki","_Component","_temp","_this","this","_len","args","Array","_key","apply","concat","state","complete","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","_back","data","props","onBack","setState","_next","steps","onFinish","onNext","_lokiData","stepIndex","cantBack","isInFinalStep","backHandler","bind","nextHandler","_renderSteps","_this2","renderSteps","map","newStep","_renderComponents","renderComponents","_lokiData2","component","noActions","cloneElement","backLabel","nextLabel","finishLabel","_renderActions","renderActions","type","render","Component","defaultProps","Step1","htmlFor","id","placeholder","Step2","selected","Step3","Col","customSteps","label","number","LivePreviewExample","Button","size","color","UncontrolledTooltip","clsx","current","e","outline","toast","success","containerId","transition","Zoom","error","Slide","Step4","description","FormsWizard","titleHeading","titleDescription","sectionHeading","FormsWizardHorizontal","FormsWizardVertical","FormsWizardIntegrationOne","FormsWizardIntegrationTwo"],"mappings":"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","file":"static/js/71.c6193151.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar LokiStep = function LokiStep(_ref) {\n  var currentStep = _ref.currentStep,\n      stepsDone = _ref.stepsDone,\n      totalSteps = _ref.totalSteps,\n      step = _ref.step,\n      isLokiComplete = _ref.isLokiComplete,\n      goTo = _ref.goTo;\n\n  var isActive = currentStep === step.index;\n  var isComplete = currentStep > step.index;\n  var isDisabled = !isActive && !isComplete;\n\n  return React.createElement(\n    \"li\",\n    {\n      className: \"LokiStep \" + (isActive && \"LokiStep-Active\") + \" \" + ((isComplete || isLokiComplete) && \"LokiStep-Complete\")\n    },\n    React.createElement(\n      \"a\",\n      {\n        href: \"#\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          if (isDisabled) {\n            return;\n          }\n\n          goTo(step.index);\n        },\n        className: \"LokiStep-Link \" + (isDisabled && \"disabled\"),\n        disabled: isDisabled\n      },\n      React.createElement(\n        \"div\",\n        { className: \"LokiStep-Icon\" },\n        step.icon || step.index\n      )\n    )\n  );\n};\n\nLokiStep.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  currentStep: PropTypes.number.isRequired,\n  totalSteps: PropTypes.number.isRequired,\n  step: PropTypes.object.isRequired,\n  isLokiComplete: PropTypes.bool.isRequired\n} : {};\n\nexport default LokiStep;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _class, _temp2;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LokiStep from \"./LokiStep\";\nimport LokiStepContainer from \"./LokiStepContainer\";\n\nvar Loki = (_temp2 = _class = function (_Component) {\n  _inherits(Loki, _Component);\n\n  function Loki() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Loki);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      currentStep: 1,\n      stepsDone: [],\n      complete: false\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Loki.prototype._back = function _back(data) {\n    this.props.onBack && this.props.onBack(data);\n    this.setState({ currentStep: this.state.currentStep - 1 });\n  };\n\n  Loki.prototype._next = function _next(data) {\n    if (this.state.currentStep === this.props.steps.length) {\n      this.props.onFinish(data);\n      return this.setState({ complete: true });\n    }\n\n    this.props.onNext && this.props.onNext(data);\n    this.setState({\n      currentStep: this.state.currentStep + 1,\n      stepsDone: this.state.stepsDone.concat([this.state.currentStep])\n    });\n  };\n\n  Loki.prototype._lokiData = function _lokiData() {\n    return {\n      currentStep: this.state.currentStep,\n      stepIndex: this.state.currentStep - 1,\n      cantBack: this.state.currentStep === 1,\n      isInFinalStep: this.state.currentStep === this.props.steps.length,\n      backHandler: this._back.bind(this),\n      nextHandler: this._next.bind(this)\n    };\n  };\n\n  Loki.prototype._renderSteps = function _renderSteps() {\n    var _this2 = this;\n\n    if (!this.props.steps) {\n      return;\n    }\n\n    if (this.props.renderSteps) {\n      return this.props.renderSteps(this._lokiData());\n    }\n\n    var steps = this.props.steps.map(function (step, index) {\n      return React.createElement(LokiStep, {\n        key: index,\n        stepsDone: _this2.state.stepsDone,\n        currentStep: _this2.state.currentStep,\n        totalSteps: _this2.props.steps.length,\n        step: _extends({}, step, { index: index + 1 }),\n        goTo: function goTo(newStep) {\n          return _this2.setState({ currentStep: newStep });\n        },\n        isLokiComplete: _this2.state.complete\n      });\n    });\n\n    return React.createElement(\n      LokiStepContainer,\n      null,\n      steps\n    );\n  };\n\n  Loki.prototype._renderComponents = function _renderComponents() {\n    if (!this.props.steps) {\n      return;\n    }\n\n    if (this.props.renderComponents) {\n      return this.props.renderComponents(this._lokiData());\n    }\n\n    var _lokiData2 = this._lokiData(),\n        stepIndex = _lokiData2.stepIndex,\n        cantBack = _lokiData2.cantBack,\n        isInFinalStep = _lokiData2.isInFinalStep,\n        backHandler = _lokiData2.backHandler,\n        nextHandler = _lokiData2.nextHandler;\n\n    var component = this.props.steps[stepIndex].component;\n\n    if (this.props.noActions) {\n      return React.cloneElement(component, {\n        isComplete: this.state.complete,\n        backLabel: this.props.backLabel,\n        nextLabel: isInFinalStep ? this.props.finishLabel : this.props.nextLabel,\n        cantBack: cantBack,\n        isInFinalStep: isInFinalStep,\n        onBack: backHandler,\n        onNext: nextHandler\n      });\n    }\n\n    return component;\n  };\n\n  Loki.prototype._renderActions = function _renderActions() {\n    // If we don't want the buttons we do not render them\n    if (!this.props.steps || this.props.noActions) {\n      return;\n    }\n\n    var cantBack = this.state.currentStep === 1;\n    var isInFinalStep = this.state.currentStep === this.props.steps.length;\n\n    // If we want custom actions we render them\n    if (this.props.renderActions) {\n      return this.props.renderActions(this._lokiData());\n    }\n\n    return React.createElement(\n      \"div\",\n      { className: \"Loki-Actions\" },\n      React.createElement(\n        \"button\",\n        {\n          type: \"button\",\n          onClick: this._back.bind(this),\n          disabled: cantBack || this.state.complete\n        },\n        this.props.backLabel\n      ),\n      React.createElement(\n        \"button\",\n        {\n          type: \"button\",\n          onClick: this._next.bind(this),\n          disabled: this.state.complete\n        },\n        isInFinalStep ? this.props.finishLabel : this.props.nextLabel\n      )\n    );\n  };\n\n  Loki.prototype.render = function render() {\n    return React.createElement(\n      \"div\",\n      { className: \"Loki\" },\n      this._renderSteps(),\n      this._renderComponents(),\n      this._renderActions()\n    );\n  };\n\n  return Loki;\n}(Component), _class.defaultProps = {\n  backLabel: \"Back\",\n  nextLabel: \"Next\",\n  finishLabel: \"Finish\"\n}, _temp2);\n\n\nLoki.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  steps: PropTypes.array.isRequired,\n  onFinish: PropTypes.func.isRequired\n} : {};\n\nexport { Loki as default, LokiStepContainer, LokiStep };","import React from 'react';\n\nvar LokiStepContainer = function LokiStepContainer(_ref) {\n    var children = _ref.children;\n    return React.createElement(\n        \"ol\",\n        { className: \"LokiSteps\" },\n        children\n    );\n};\n\nexport default LokiStepContainer;","import React, { Fragment } from 'react';\n\nimport clsx from 'clsx';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { Col, UncontrolledTooltip, Button } from 'reactstrap';\n\nimport Loki from 'react-loki';\nimport { toast, Zoom } from 'react-toastify';\n\nconst Step1 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps horizontal\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">\n            Personal information\n          </h5>\n          <p className=\"text-black-50 mb-4\">\n            Small section summary description can be added here!\n          </p>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputEmail4\">Email</label>\n              <input\n                className=\"form-control\"\n                id=\"inputEmail4\"\n                placeholder=\"Email\"\n                type=\"email\"\n              />\n            </div>\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputPassword4\">Password</label>\n              <input\n                className=\"form-control\"\n                id=\"inputPassword4\"\n                placeholder=\"Password\"\n                type=\"password\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputAddress\">Address</label>\n            <input\n              className=\"form-control\"\n              id=\"inputAddress\"\n              placeholder=\"1234 Main St\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nconst Step2 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps horizontal\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">Billing information</h5>\n          <p className=\"text-black-50 mb-4\">Wonderful transition effects.</p>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputAddress2\">Address 2</label>\n            <input\n              className=\"form-control\"\n              id=\"inputAddress2\"\n              placeholder=\"Apartment, studio, or floor\"\n              type=\"text\"\n            />\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputCity\">City</label>\n              <input className=\"form-control\" id=\"inputCity\" type=\"text\" />\n            </div>\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"inputState\">State</label>\n              <select className=\"form-control\" id=\"inputState\">\n                <option selected=\"\">Choose...</option>\n                <option>...</option>\n              </select>\n            </div>\n            <div className=\"form-group col-md-2\">\n              <label htmlFor=\"inputZip\">Zip</label>\n              <input className=\"form-control\" id=\"inputZip\" type=\"text\" />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                id=\"gridCheck\"\n                type=\"checkbox\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                Check me out\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nconst Step3 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps horizontal\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">Payment details</h5>\n          <p className=\"text-black-50 mb-4\">\n            The next and previous buttons help you to navigate through your\n            content.\n          </p>\n          <div className=\"row\">\n            <Col className=\"form-group col-12\">\n              <input\n                className=\"form-control\"\n                placeholder=\"Credit card number\"\n                type=\"text\"\n              />\n            </Col>\n            <Col className=\"col-sm-6\">\n              <input\n                className=\"form-control mb-3 mb-md-0\"\n                placeholder=\"Name on card\"\n                type=\"text\"\n              />\n            </Col>\n            <Col className=\"col-7 col-sm-3 mg-t-20 mg-sm-t-0 d-flex align-items-end\">\n              <input\n                className=\"form-control\"\n                placeholder=\"Exp. date\"\n                type=\"text\"\n              />\n            </Col>\n            <div className=\"col-5 col-sm-3 mg-t-20 mg-sm-t-0 d-flex align-items-end\">\n              <input\n                className=\"form-control\"\n                placeholder=\"CVC/CVV\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst customSteps = [\n  {\n    label: 'Personal information',\n    number: '1',\n    component: <Step1 />\n  },\n  {\n    label: 'Billing information',\n    number: '2',\n    component: <Step2 />\n  },\n  {\n    label: 'Payment details',\n    number: '3',\n    component: <Step3 />\n  }\n];\n\nconst LivePreviewExample = () => {\n  const _customRenderer = ({ currentStep }) => {\n    const steps = customSteps.map((step, index) => {\n      const isActive = currentStep === index + 1;\n      return (\n        <li key={index} className={clsx('card-box', { current: isActive })}>\n          <a href=\"#/\" onClick={e => e.preventDefault()}>\n            <div className=\"label\">{step.label}</div>\n            <div className=\"step-indicator\">{step.number}</div>\n          </a>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"horizontal\">\n        <ul className=\"steps-indicator\">{steps}</ul>\n      </div>\n    );\n  };\n\n  const _customActions = ({\n    isComplete,\n    cantBack,\n    isInFinalStep,\n    backHandler,\n    nextHandler\n  }) => {\n    return (\n      <div className=\"actions p-4\">\n        <Button\n          outline\n          color=\"primary\"\n          onClick={backHandler}\n          disabled={cantBack || isComplete}>\n          Previous\n        </Button>\n        <Button color=\"primary\" onClick={nextHandler} disabled={isComplete}>\n          {isInFinalStep ? 'Finish' : 'Next'}\n        </Button>\n      </div>\n    );\n  };\n\n  const _onFinish = () => {\n    toast.success(\"Yes, you've successfully reached the last wizard step !\", {\n      containerId: 'B',\n      transition: Zoom\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className=\"card card-box\">\n        <div className=\"card-header\">\n          <div className=\"card-header--title\">\n            <small>Wizards</small>\n            <b>Horizontal example</b>\n          </div>\n          <div className=\"card-header--actions\">\n            <Button\n              size=\"sm\"\n              color=\"primary\"\n              className=\"px-1\"\n              id=\"btnAddNewTooltip73458\">\n              <FontAwesomeIcon\n                icon={['fas', 'plus-circle']}\n                className=\"text-dark font-size-lg\"\n              />\n            </Button>\n            <UncontrolledTooltip target=\"btnAddNewTooltip73458\">\n              Add new\n            </UncontrolledTooltip>\n          </div>\n        </div>\n        <div className=\"wizard\">\n          <Loki\n            steps={customSteps}\n            renderSteps={_customRenderer}\n            renderActions={_customActions}\n            onFinish={_onFinish}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default LivePreviewExample;\n","import React, { Fragment } from 'react';\n\nimport clsx from 'clsx';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { Col, UncontrolledTooltip, Button } from 'reactstrap';\n\nimport Loki from 'react-loki';\nimport { toast, Zoom } from 'react-toastify';\n\nconst Step1 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps vertical\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">\n            Personal information\n          </h5>\n          <p className=\"text-black-50 mb-4\">\n            Small section summary description can be added here!\n          </p>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputEmail4\">Email</label>\n              <input\n                className=\"form-control\"\n                id=\"inputEmail4\"\n                placeholder=\"Email\"\n                type=\"email\"\n              />\n            </div>\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputPassword4\">Password</label>\n              <input\n                className=\"form-control\"\n                id=\"inputPassword4\"\n                placeholder=\"Password\"\n                type=\"password\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputAddress\">Address</label>\n            <input\n              className=\"form-control\"\n              id=\"inputAddress\"\n              placeholder=\"1234 Main St\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nconst Step2 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps vertical\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">Billing information</h5>\n          <p className=\"text-black-50 mb-4\">Wonderful transition effects.</p>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputAddress2\">Address 2</label>\n            <input\n              className=\"form-control\"\n              id=\"inputAddress2\"\n              placeholder=\"Apartment, studio, or floor\"\n              type=\"text\"\n            />\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputCity\">City</label>\n              <input className=\"form-control\" id=\"inputCity\" type=\"text\" />\n            </div>\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"inputState\">State</label>\n              <select className=\"form-control\" id=\"inputState\">\n                <option selected=\"\">Choose...</option>\n                <option>...</option>\n              </select>\n            </div>\n            <div className=\"form-group col-md-2\">\n              <label htmlFor=\"inputZip\">Zip</label>\n              <input className=\"form-control\" id=\"inputZip\" type=\"text\" />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                id=\"gridCheck\"\n                type=\"checkbox\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                Check me out\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nconst Step3 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps vertical\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">Payment details</h5>\n          <p className=\"text-black-50 mb-4\">\n            The next and previous buttons help you to navigate through your\n            content.\n          </p>\n          <div className=\"row\">\n            <Col className=\"form-group col-12\">\n              <input\n                className=\"form-control\"\n                placeholder=\"Credit card number\"\n                type=\"text\"\n              />\n            </Col>\n            <Col className=\"col-sm-6\">\n              <input\n                className=\"form-control mb-3 mb-md-0\"\n                placeholder=\"Name on card\"\n                type=\"text\"\n              />\n            </Col>\n            <Col className=\"col-7 col-sm-3 mg-t-20 mg-sm-t-0 d-flex align-items-end\">\n              <input\n                className=\"form-control\"\n                placeholder=\"Exp. date\"\n                type=\"text\"\n              />\n            </Col>\n            <div className=\"col-5 col-sm-3 mg-t-20 mg-sm-t-0 d-flex align-items-end\">\n              <input\n                className=\"form-control\"\n                placeholder=\"CVC/CVV\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst customSteps = [\n  {\n    label: 'Personal information',\n    number: '1',\n    component: <Step1 />\n  },\n  {\n    label: 'Billing information',\n    number: '2',\n    component: <Step2 />\n  },\n  {\n    label: 'Payment details',\n    number: '3',\n    component: <Step3 />\n  }\n];\n\nconst LivePreviewExample = () => {\n  const _customRenderer = ({ currentStep }) => {\n    const steps = customSteps.map((step, index) => {\n      const isActive = currentStep === index + 1;\n      return (\n        <li key={index} className={clsx('card-box', { current: isActive })}>\n          <a href=\"#/\" onClick={e => e.preventDefault()}>\n            <div className=\"label\">{step.label}</div>\n            <div className=\"step-indicator\">{step.number}</div>\n          </a>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"vertical\">\n        <ul className=\"steps-indicator\">{steps}</ul>\n      </div>\n    );\n  };\n\n  const _customActions = ({\n    isComplete,\n    cantBack,\n    isInFinalStep,\n    backHandler,\n    nextHandler\n  }) => {\n    return (\n      <div className=\"actions p-4\">\n        <Button\n          outline\n          color=\"primary\"\n          onClick={backHandler}\n          disabled={cantBack || isComplete}>\n          Previous\n        </Button>\n        <Button color=\"primary\" onClick={nextHandler} disabled={isComplete}>\n          {isInFinalStep ? 'Finish' : 'Next'}\n        </Button>\n      </div>\n    );\n  };\n\n  const _onFinish = () => {\n    toast.success(\"Yes, you've successfully reached the last wizard step !\", {\n      containerId: 'B',\n      transition: Zoom\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className=\"card card-box\">\n        <div className=\"card-header\">\n          <div className=\"card-header--title\">\n            <small>Wizards</small>\n            <b>Vertical example</b>\n          </div>\n          <div className=\"card-header--actions\">\n            <a\n              href=\"#/\"\n              onClick={e => e.preventDefault()}\n              size=\"sm\"\n              color=\"first\"\n              id=\"SendMessageTooltip2347\">\n              <FontAwesomeIcon\n                icon={['fas', 'plus']}\n                className=\"font-size-sm\"\n              />\n            </a>\n            <UncontrolledTooltip target=\"SendMessageTooltip2347\">\n              Send new message\n            </UncontrolledTooltip>\n          </div>\n        </div>\n        <div className=\"wizard vertical\">\n          <Loki\n            steps={customSteps}\n            renderSteps={_customRenderer}\n            renderActions={_customActions}\n            onFinish={_onFinish}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default LivePreviewExample;\n","import React, { Fragment } from 'react';\n\nimport clsx from 'clsx';\n\nimport { Col, Button } from 'reactstrap';\n\nimport Loki from 'react-loki';\nimport { toast, Slide } from 'react-toastify';\n\nconst Step1 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps horizontal text-center\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">\n            Personal information\n          </h5>\n          <p className=\"text-black-50 mb-4\">\n            Small section summary description can be added here!\n          </p>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputEmail4\">Email</label>\n              <input\n                className=\"form-control\"\n                id=\"inputEmail4\"\n                placeholder=\"Email\"\n                type=\"email\"\n              />\n            </div>\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputPassword4\">Password</label>\n              <input\n                className=\"form-control\"\n                id=\"inputPassword4\"\n                placeholder=\"Password\"\n                type=\"password\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputAddress\">Address</label>\n            <input\n              className=\"form-control\"\n              id=\"inputAddress\"\n              placeholder=\"1234 Main St\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nconst Step2 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps horizontal text-center\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">Billing information</h5>\n          <p className=\"text-black-50 mb-4\">Wonderful transition effects.</p>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputAddress2\">Address 2</label>\n            <input\n              className=\"form-control\"\n              id=\"inputAddress2\"\n              placeholder=\"Apartment, studio, or floor\"\n              type=\"text\"\n            />\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputCity\">City</label>\n              <input className=\"form-control\" id=\"inputCity\" type=\"text\" />\n            </div>\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"inputState\">State</label>\n              <select className=\"form-control\" id=\"inputState\">\n                <option selected=\"\">Choose...</option>\n                <option>...</option>\n              </select>\n            </div>\n            <div className=\"form-group col-md-2\">\n              <label htmlFor=\"inputZip\">Zip</label>\n              <input className=\"form-control\" id=\"inputZip\" type=\"text\" />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                id=\"gridCheck\"\n                type=\"checkbox\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                Check me out\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nconst Step3 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps horizontal text-center\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">Payment details</h5>\n          <p className=\"text-black-50 mb-4\">\n            The next and previous buttons help you to navigate through your\n            content.\n          </p>\n          <div className=\"row\">\n            <Col className=\"form-group col-12\">\n              <input\n                className=\"form-control\"\n                placeholder=\"Credit card number\"\n                type=\"text\"\n              />\n            </Col>\n            <Col className=\"col-sm-6\">\n              <input\n                className=\"form-control mb-3 mb-md-0\"\n                placeholder=\"Name on card\"\n                type=\"text\"\n              />\n            </Col>\n            <Col className=\"col-7 col-sm-3 mg-t-20 mg-sm-t-0 d-flex align-items-end\">\n              <input\n                className=\"form-control\"\n                placeholder=\"Exp. date\"\n                type=\"text\"\n              />\n            </Col>\n            <div className=\"col-5 col-sm-3 mg-t-20 mg-sm-t-0 d-flex align-items-end\">\n              <input\n                className=\"form-control\"\n                placeholder=\"CVC/CVV\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst customSteps = [\n  {\n    label: 'Personal information',\n    number: '1',\n    component: <Step1 />\n  },\n  {\n    label: 'Billing information',\n    number: '2',\n    component: <Step2 />\n  },\n  {\n    label: 'Payment details',\n    number: '3',\n    component: <Step3 />\n  }\n];\n\nconst LivePreviewExample = () => {\n  const _customRenderer = ({ currentStep }) => {\n    const steps = customSteps.map((step, index) => {\n      const isActive = currentStep === index + 1;\n      return (\n        <li key={index} className={clsx('card-box', { current: isActive })}>\n          <a href=\"#/\" onClick={e => e.preventDefault()}>\n            <div className=\"label\">{step.label}</div>\n            <div className=\"step-indicator\">\n              <div className=\"text-center font-size-lg d-50 rounded-sm mx-auto bg-neutral-first ng-star-inserted\">\n                <span className=\"font-weight-bold font-size-xl\">\n                  {step.number}\n                </span>\n              </div>\n            </div>\n          </a>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"horizontal\">\n        <ul className=\"steps-indicator\">{steps}</ul>\n      </div>\n    );\n  };\n\n  const _customActions = ({\n    isComplete,\n    cantBack,\n    isInFinalStep,\n    backHandler,\n    nextHandler\n  }) => {\n    return (\n      <div className=\"bg-secondary rounded-sm d-flex justify-content-between p-4\">\n        <Button\n          className=\"btn-pill\"\n          outline\n          color=\"primary\"\n          onClick={backHandler}\n          disabled={cantBack || isComplete}>\n          Previous\n        </Button>\n        <Button\n          className=\"btn-pill\"\n          color=\"success\"\n          onClick={nextHandler}\n          disabled={isComplete}>\n          {isInFinalStep ? 'Finish' : 'Next'}\n        </Button>\n      </div>\n    );\n  };\n\n  const _onFinish = () => {\n    toast.error(\"Yes, you've successfully reached the last wizard step !\", {\n      containerId: 'A',\n      transition: Slide\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className=\"wizard-alternate horizontal\">\n        <Loki\n          steps={customSteps}\n          renderSteps={_customRenderer}\n          renderActions={_customActions}\n          onFinish={_onFinish}\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default LivePreviewExample;\n","import React, { Fragment } from 'react';\n\nimport clsx from 'clsx';\n\nimport { Col, Button } from 'reactstrap';\n\nimport Loki from 'react-loki';\nimport { toast, Zoom } from 'react-toastify';\n\nconst Step1 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps horizontal\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">\n            Personal information\n          </h5>\n          <p className=\"text-black-50 mb-4\">\n            Small section summary description can be added here!\n          </p>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputEmail4\">Email</label>\n              <input\n                className=\"form-control\"\n                id=\"inputEmail4\"\n                placeholder=\"Email\"\n                type=\"email\"\n              />\n            </div>\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputPassword4\">Password</label>\n              <input\n                className=\"form-control\"\n                id=\"inputPassword4\"\n                placeholder=\"Password\"\n                type=\"password\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputAddress\">Address</label>\n            <input\n              className=\"form-control\"\n              id=\"inputAddress\"\n              placeholder=\"1234 Main St\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nconst Step2 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps horizontal\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">Billing information</h5>\n          <p className=\"text-black-50 mb-4\">Wonderful transition effects.</p>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputAddress2\">Address 2</label>\n            <input\n              className=\"form-control\"\n              id=\"inputAddress2\"\n              placeholder=\"Apartment, studio, or floor\"\n              type=\"text\"\n            />\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputCity\">City</label>\n              <input className=\"form-control\" id=\"inputCity\" type=\"text\" />\n            </div>\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"inputState\">State</label>\n              <select className=\"form-control\" id=\"inputState\">\n                <option selected=\"\">Choose...</option>\n                <option>...</option>\n              </select>\n            </div>\n            <div className=\"form-group col-md-2\">\n              <label htmlFor=\"inputZip\">Zip</label>\n              <input className=\"form-control\" id=\"inputZip\" type=\"text\" />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                id=\"gridCheck\"\n                type=\"checkbox\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                Check me out\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nconst Step3 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps horizontal\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">Payment details</h5>\n          <p className=\"text-black-50 mb-4\">\n            The next and previous buttons help you to navigate through your\n            content.\n          </p>\n          <div className=\"row\">\n            <Col className=\"form-group col-12\">\n              <input\n                className=\"form-control\"\n                placeholder=\"Credit card number\"\n                type=\"text\"\n              />\n            </Col>\n            <Col className=\"col-sm-6\">\n              <input\n                className=\"form-control mb-3 mb-md-0\"\n                placeholder=\"Name on card\"\n                type=\"text\"\n              />\n            </Col>\n            <Col className=\"col-7 col-sm-3 mg-t-20 mg-sm-t-0 d-flex align-items-end\">\n              <input\n                className=\"form-control\"\n                placeholder=\"Exp. date\"\n                type=\"text\"\n              />\n            </Col>\n            <div className=\"col-5 col-sm-3 mg-t-20 mg-sm-t-0 d-flex align-items-end\">\n              <input\n                className=\"form-control\"\n                placeholder=\"CVC/CVV\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nconst Step4 = () => {\n  return (\n    <Fragment>\n      <div className=\"wizard-steps horizontal\">\n        <div className=\"p-4\">\n          <h5 className=\"font-size-xl font-weight-bold\">\n            Personal information\n          </h5>\n          <p className=\"text-black-50 mb-4\">\n            Small section summary description can be added here!\n          </p>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputEmail4\">Email</label>\n              <input\n                className=\"form-control\"\n                id=\"inputEmail4\"\n                placeholder=\"Email\"\n                type=\"email\"\n              />\n            </div>\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputPassword4\">Password</label>\n              <input\n                className=\"form-control\"\n                id=\"inputPassword4\"\n                placeholder=\"Password\"\n                type=\"password\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputAddress\">Address</label>\n            <input\n              className=\"form-control\"\n              id=\"inputAddress\"\n              placeholder=\"1234 Main St\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst customSteps = [\n  {\n    label: 'Reports',\n    number: '1',\n    description: 'Try the keyboard navigation',\n    component: <Step1 />\n  },\n  {\n    label: 'Accounts',\n    number: '2',\n    description: 'Cicero text generator',\n    component: <Step2 />\n  },\n  {\n    label: 'Payments',\n    number: '3',\n    description: 'Wonderful transition effects',\n    component: <Step3 />\n  },\n  {\n    label: 'Deliveries',\n    number: '4',\n    description: 'The next and previous buttons',\n    component: <Step4 />\n  }\n];\n\nconst LivePreviewExample = () => {\n  const _customRenderer = ({ currentStep }) => {\n    const steps = customSteps.map((step, index) => {\n      const isActive = currentStep === index + 1;\n      return (\n        <li key={index} className={clsx('card-box', { current: isActive })}>\n          <a href=\"#/\" onClick={e => e.preventDefault()}>\n            <div className=\"step-indicator\">\n              <div className=\"d-flex\">\n                <div className=\"font-size-lg d-44 rounded-sm mr-2 stepper-wrapper text-center\">\n                  <span className=\"font-weight-bold\">{step.number}</span>\n                </div>\n                <div>\n                  <div className=\"font-weight-bold\">{step.label}</div>\n                  <small className=\"text-black-50\">{step.description}</small>\n                </div>\n              </div>\n            </div>\n          </a>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"horizontal\">\n        <ul className=\"steps-indicator\">{steps}</ul>\n      </div>\n    );\n  };\n\n  const _customActions = ({\n    isComplete,\n    cantBack,\n    isInFinalStep,\n    backHandler,\n    nextHandler\n  }) => {\n    return (\n      <div className=\"actions p-4\">\n        <Button\n          outline\n          color=\"primary\"\n          onClick={backHandler}\n          disabled={cantBack || isComplete}>\n          Previous\n        </Button>\n        <Button color=\"primary\" onClick={nextHandler} disabled={isComplete}>\n          {isInFinalStep ? 'Finish' : 'Next'}\n        </Button>\n      </div>\n    );\n  };\n\n  const _onFinish = () => {\n    toast.success(\"Yes, you've successfully reached the last wizard step !\", {\n      containerId: 'B',\n      transition: Zoom\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className=\"wizard-alternate-2 horizontal\">\n        <Loki\n          steps={customSteps}\n          renderSteps={_customRenderer}\n          renderActions={_customActions}\n          onFinish={_onFinish}\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default LivePreviewExample;\n","import React, { Fragment } from 'react';\n\nimport { PageTitle } from '../../layout-components';\nimport { ExampleWrapperSeamless } from '../../layout-components';\nimport { ExampleWrapperSimple } from '../../layout-components';\nimport FormsWizardHorizontal from '../../example-components/FormsWizard/FormsWizardHorizontal';\nimport FormsWizardVertical from '../../example-components/FormsWizard/FormsWizardVertical';\nimport FormsWizardIntegrationOne from '../../example-components/FormsWizard/FormsWizardIntegrationOne';\nimport FormsWizardIntegrationTwo from '../../example-components/FormsWizard/FormsWizardIntegrationTwo';\nexport default function FormsWizard() {\n  return (\n    <Fragment>\n      <PageTitle\n        titleHeading=\"Wizard\"\n        titleDescription=\"Easily create beautiful form multi step wizards or presentation steps.\"\n      />\n\n      <ExampleWrapperSeamless sectionHeading=\"Horizontal\">\n        <FormsWizardHorizontal />\n      </ExampleWrapperSeamless>\n      <ExampleWrapperSeamless sectionHeading=\"Vertical\">\n        <FormsWizardVertical />\n      </ExampleWrapperSeamless>\n      <ExampleWrapperSimple sectionHeading=\"Wizard alternate I\">\n        <FormsWizardIntegrationOne />\n      </ExampleWrapperSimple>\n      <ExampleWrapperSeamless sectionHeading=\"Wizard alternate II\">\n        <FormsWizardIntegrationTwo />\n      </ExampleWrapperSeamless>\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}