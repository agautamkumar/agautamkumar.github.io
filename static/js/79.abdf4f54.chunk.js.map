{"version":3,"sources":["example-components/Notifications/NotificationsSweetalerts/index.js","example-components/Notifications/NotificationsToastr/index.js","example-components/Notifications/NotificationsToasts/index.js","example-components/Notifications/NotificationsAlertsBasic/index.js","example-components/Notifications/NotificationsAlertsDismissible/index.js","example-components/Notifications/NotificationsAlertsAlternateStyle/index.js","example-pages/Notifications/index.js"],"names":["LivePreviewExample","useState","show1","setShow1","message34","setMessage34","message33","setMessage33","message32","setMessage32","message1","setMessage1","message2","setMessage2","className","Button","color","onClick","show","title","confirmButtonColor","text","type","toast","containerId","info","success","warn","error","transition","Flip","Zoom","Slide","Row","Col","md","Toast","ToastHeader","icon","ToastBody","Spinner","size","alt","src","avatar2","width","Alert","visible","setVisible","UncontrolledAlert","href","e","preventDefault","isOpen","toggle","Notifications","titleHeading","titleDescription","sectionHeading","NotificationsAlertsDismissible"],"mappings":"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","file":"static/js/79.abdf4f54.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\n\nimport { Button } from 'reactstrap';\n\nimport SweetAlert from 'sweetalert2-react';\n\nexport default function LivePreviewExample() {\n  const [show1, setShow1] = useState(false);\n  const [message34, setMessage34] = useState(false);\n  const [message33, setMessage33] = useState(false);\n  const [message32, setMessage32] = useState(false);\n  const [message1, setMessage1] = useState(false);\n  const [message2, setMessage2] = useState(false);\n\n  return (\n    <Fragment>\n      <div className=\"text-center\">\n        <Button\n          className=\"m-2\"\n          color=\"success\"\n          onClick={() => setShow1({ show: true })}>\n          Success\n        </Button>\n        <Button\n          className=\"m-2\"\n          color=\"danger\"\n          onClick={() => setMessage34({ message34: true })}>\n          Danger\n        </Button>\n        <Button\n          className=\"m-2\"\n          color=\"info\"\n          onClick={() => setMessage32({ message32: true })}>\n          Info\n        </Button>\n        <Button\n          className=\"m-2\"\n          color=\"warning\"\n          onClick={() => setMessage33({ message33: true })}>\n          Warning\n        </Button>\n      </div>\n\n      <div className=\"divider my-4\" />\n\n      <div className=\"text-center\">\n        <Button\n          className=\"m-2\"\n          color=\"primary\"\n          onClick={() => setMessage1({ message1: true })}>\n          Basic\n        </Button>\n        <Button\n          className=\"m-2\"\n          color=\"primary\"\n          onClick={() => setMessage2({ message2: true })}>\n          Title and Text\n        </Button>\n      </div>\n\n      <SweetAlert\n        title=\"Good job!\"\n        confirmButtonColor=\"\"\n        show={show1}\n        text=\"You clicked the button!\"\n        type=\"success\"\n      />\n\n      <SweetAlert\n        title=\"Good job!\"\n        confirmButtonColor=\"\"\n        show={message34}\n        text=\"You clicked the button!\"\n        type=\"error\"\n      />\n\n      <SweetAlert\n        title=\"Good job!\"\n        confirmButtonColor=\"\"\n        show={message32}\n        text=\"You clicked the button!\"\n        type=\"info\"\n      />\n\n      <SweetAlert\n        title=\"Good job!\"\n        confirmButtonColor=\"\"\n        show={message33}\n        text=\"You clicked the button!\"\n        type=\"warning\"\n      />\n\n      <SweetAlert\n        title=\"\"\n        confirmButtonColor=\"\"\n        show={message1}\n        text=\"Here's a message!\"\n      />\n\n      <SweetAlert\n        title=\"Here's a message!\"\n        confirmButtonColor=\"\"\n        show={message2}\n        text=\"It's pretty, isn't it?\"\n      />\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { Button } from 'reactstrap';\n\nimport { toast, Slide, Flip, Zoom } from 'react-toastify';\n\nexport default function LivePreviewExample() {\n  const notify1 = () => {\n    toast('Good evening, you lovely person!', { containerId: 'A' });\n  };\n  const notify2 = () => {\n    toast.info('This library is built on top of React.', { containerId: 'C' });\n  };\n  const notify3 = () => {\n    toast.success('Notification successfully opened!', { containerId: 'B' });\n  };\n  const notify4 = () => {\n    toast.warn('Notification successfully opened.', { containerId: 'A' });\n  };\n  const notify5 = () => {\n    toast.error('Warning! But not an error! Just a warning!', {\n      containerId: 'B'\n    });\n  };\n  const notify8 = () => {\n    toast.success('Notification successfully opened.', {\n      containerId: 'C',\n      transition: Slide\n    });\n  };\n  const notify6 = () => {\n    toast.error('Whoops, something went wrong. Probably.', {\n      containerId: 'A',\n      transition: Flip\n    });\n  };\n  const notify7 = () => {\n    toast('Good evening, you lovely person!', {\n      containerId: 'B',\n      transition: Zoom\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className=\"text-center\">\n        <Button onClick={notify1} color=\"primary\" className=\"m-2\">\n          Primary\n        </Button>\n        <Button onClick={notify2} color=\"info\" className=\"m-2\">\n          Info\n        </Button>\n        <Button onClick={notify3} color=\"success\" className=\"m-2\">\n          Success\n        </Button>\n        <Button onClick={notify4} color=\"warning\" className=\"m-2\">\n          Warning\n        </Button>\n        <Button onClick={notify5} color=\"danger\" className=\"m-2\">\n          Error\n        </Button>\n\n        <div className=\"divider my-4\" />\n\n        <Button onClick={notify6} color=\"primary\" className=\"m-2\">\n          Slide\n        </Button>\n        <Button onClick={notify7} color=\"primary\" className=\"m-2\">\n          Flip\n        </Button>\n        <Button onClick={notify8} color=\"primary\" className=\"m-2\">\n          Zoom\n        </Button>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { Row, Col } from 'reactstrap';\n\nimport avatar2 from '../../../assets/images/avatars/avatar2.jpg';\n\nimport { Toast, ToastBody, ToastHeader, Spinner } from 'reactstrap';\n\nexport default function LivePreviewExample() {\n  return (\n    <Fragment>\n      <Row>\n        <Col md=\"6\">\n          <div className=\"bg-premium-dark rounded-sm p-5 mb-5\">\n            <Toast className=\"mx-auto\">\n              <ToastHeader icon=\"primary\">Toastr title</ToastHeader>\n              <ToastBody>\n                This is a toast with a primary icon — check it out!\n              </ToastBody>\n            </Toast>\n          </div>\n        </Col>\n        <Col md=\"6\">\n          <div className=\"bg-asteroid rounded-sm p-5 mb-5\">\n            <Toast className=\"mx-auto\">\n              <ToastHeader icon=\"secondary\">Toastr title</ToastHeader>\n              <ToastBody>\n                This is a toast with a secondary icon — check it out!\n              </ToastBody>\n            </Toast>\n          </div>\n        </Col>\n        <Col md=\"6\">\n          <div className=\"bg-night-sky rounded-sm p-5 mb-5\">\n            <Toast className=\"mx-auto\">\n              <ToastHeader icon=\"success\">Toastr title</ToastHeader>\n              <ToastBody>\n                This is a toast with a success icon — check it out!\n              </ToastBody>\n            </Toast>\n          </div>\n        </Col>\n        <Col md=\"6\">\n          <div className=\"bg-royal rounded-sm p-5 mb-5\">\n            <Toast className=\"mx-auto\">\n              <ToastHeader icon=\"danger\">Toastr title</ToastHeader>\n              <ToastBody>\n                This is a toast with a danger icon — check it out!\n              </ToastBody>\n            </Toast>\n          </div>\n        </Col>\n        <Col md=\"6\">\n          <div className=\"bg-nice-redora rounded-sm p-5 mb-5\">\n            <Toast className=\"mx-auto\">\n              <ToastHeader icon=\"warning\">Toastr title</ToastHeader>\n              <ToastBody>\n                This is a toast with a warning icon — check it out!\n              </ToastBody>\n            </Toast>\n          </div>\n        </Col>\n        <Col md=\"6\">\n          <div className=\"bg-red-lights rounded-sm p-5 mb-5\">\n            <Toast className=\"mx-auto\">\n              <ToastHeader icon=\"info\">Toastr title</ToastHeader>\n              <ToastBody>\n                This is a toast with an info icon — check it out!\n              </ToastBody>\n            </Toast>\n          </div>\n        </Col>\n        <Col md=\"6\">\n          <div className=\"bg-deep-sky rounded-sm p-5 mb-5\">\n            <Toast className=\"mx-auto\">\n              <ToastHeader icon=\"light\">Toastr title</ToastHeader>\n              <ToastBody>\n                This is a toast with a light icon — check it out!\n              </ToastBody>\n            </Toast>\n          </div>\n        </Col>\n        <Col md=\"6\">\n          <div className=\"bg-arielle-smile rounded-sm p-5 mb-5\">\n            <Toast className=\"mx-auto\">\n              <ToastHeader icon=\"dark\">Toastr title</ToastHeader>\n              <ToastBody>\n                This is a toast with a dark icon — check it out!\n              </ToastBody>\n            </Toast>\n          </div>\n        </Col>\n        <Col md=\"6\">\n          <div className=\"bg-plum-plate rounded-sm p-5 mb-5\">\n            <Toast className=\"mx-auto\">\n              <ToastHeader icon={<Spinner size=\"sm\" />}>\n                Toastr title\n              </ToastHeader>\n              <ToastBody>\n                This is a toast with a custom icon — check it out!\n              </ToastBody>\n            </Toast>\n          </div>\n        </Col>\n        <Col md=\"6\">\n          <div className=\"bg-love-kiss rounded-sm p-5 mb-5\">\n            <Toast className=\"show mx-auto\">\n              <ToastHeader\n                icon={\n                  <img\n                    alt=\"...\"\n                    className=\"rounded mr-2\"\n                    src={avatar2}\n                    width=\"22\"\n                  />\n                }>\n                Bootstrap\n              </ToastHeader>\n              <ToastBody>See? Just like this.</ToastBody>\n            </Toast>\n          </div>\n        </Col>\n        <Col md=\"6\">\n          <div className=\"bg-premium-dark rounded-sm p-5 mb-5\">\n            <Toast className=\"show mx-auto\">\n              <ToastHeader\n                icon={\n                  <img\n                    alt=\"...\"\n                    className=\"rounded mr-2\"\n                    src={avatar2}\n                    width=\"22\"\n                  />\n                }>\n                Bootstrap\n              </ToastHeader>\n              <ToastBody>Heads up, toasts will stack automatically</ToastBody>\n            </Toast>\n          </div>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { Alert } from 'reactstrap';\n\nexport default function LivePreviewExample() {\n  return (\n    <Fragment>\n      <Alert color=\"success\">\n        <div className=\"d-flex align-items-center align-content-center\">\n          <span className=\"font-size-lg d-block d-40 mr-3 text-center bg-white-50 rounded-sm\">\n            <FontAwesomeIcon icon={['far', 'object-group']} />\n          </span>\n          <span>\n            <strong className=\"d-block\">Success!</strong> This is a success\n            alert—check it out!\n          </span>\n        </div>\n      </Alert>\n      <Alert color=\"info\">\n        <div className=\"d-flex align-items-center align-content-center\">\n          <span className=\"font-size-lg d-block d-40 mr-3 text-center bg-white-50 rounded-sm\">\n            <FontAwesomeIcon icon={['far', 'building']} />\n          </span>\n          <span>\n            <strong className=\"d-block\">Info!</strong> This is an info\n            alert—check it out!\n          </span>\n        </div>\n      </Alert>\n      <Alert color=\"warning\">\n        <div className=\"d-flex align-items-center align-content-center\">\n          <span className=\"font-size-lg d-block d-40 mr-3 text-center bg-white-50 rounded-sm\">\n            <FontAwesomeIcon icon={['far', 'question-circle']} />\n          </span>\n          <span>\n            <strong className=\"d-block\">Warning!</strong> This is a warning\n            alert—check it out!\n          </span>\n        </div>\n      </Alert>\n      <Alert color=\"danger\">\n        <div className=\"d-flex align-items-center align-content-center\">\n          <span className=\"font-size-lg d-block d-40 mr-3 text-center bg-white-50 rounded-sm\">\n            <FontAwesomeIcon icon={['far', 'keyboard']} />\n          </span>\n          <span>\n            <strong className=\"d-block\">Danger!</strong> This is an error\n            alert—check it out!\n          </span>\n        </div>\n      </Alert>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useState } from 'react';\n\nimport { Alert } from 'reactstrap';\n\nimport { UncontrolledAlert } from 'reactstrap';\n\nconst LivePreviewExample = () => {\n  const [visible, setVisible] = useState(true);\n  const onDismiss = () => setVisible(false);\n\n  return (\n    <Fragment>\n      <UncontrolledAlert color=\"primary\">\n        This is a primary alert with{' '}\n        <a href=\"#/\" onClick={e => e.preventDefault()} className=\"alert-link\">\n          an example link\n        </a>\n        . Give it a click if you like.\n      </UncontrolledAlert>\n      <UncontrolledAlert color=\"success\">\n        This is a success alert with{' '}\n        <a href=\"#/\" onClick={e => e.preventDefault()} className=\"alert-link\">\n          an example link\n        </a>\n        . Give it a click if you like.\n      </UncontrolledAlert>\n      <UncontrolledAlert color=\"danger\">\n        This is a danger alert with{' '}\n        <a href=\"#/\" onClick={e => e.preventDefault()} className=\"alert-link\">\n          an example link\n        </a>\n        . Give it a click if you like.\n      </UncontrolledAlert>\n      <UncontrolledAlert color=\"warning\">\n        This is a warning alert with{' '}\n        <a href=\"#/\" onClick={e => e.preventDefault()} className=\"alert-link\">\n          an example link\n        </a>\n        . Give it a click if you like.\n      </UncontrolledAlert>\n      <UncontrolledAlert color=\"info\">\n        This is a info alert with{' '}\n        <a href=\"#/\" onClick={e => e.preventDefault()} className=\"alert-link\">\n          an example link\n        </a>\n        . Give it a click if you like.\n      </UncontrolledAlert>\n      <UncontrolledAlert color=\"dark\">\n        This is a dark alert with{' '}\n        <a href=\"#/\" onClick={e => e.preventDefault()} className=\"alert-link\">\n          an example link\n        </a>\n        . Give it a click if you like.\n      </UncontrolledAlert>\n\n      <div className=\"divider my-4\" />\n\n      <UncontrolledAlert color=\"success\">\n        <h4 className=\"alert-heading\">Well done!</h4>\n        <p>\n          Aww yeah, you successfully read this important alert message. This\n          example text is going to run a bit longer so that you can see how\n          spacing within an alert works with this kind of content.\n        </p>\n        <hr />\n        <p className=\"mb-0\">\n          Whenever you need to, be sure to use margin utilities to keep things\n          nice and tidy.\n        </p>\n      </UncontrolledAlert>\n\n      <div className=\"divider my-4\" />\n\n      <Alert color=\"info\" isOpen={visible} toggle={onDismiss}>\n        I am an alert and I can be dismissed!\n      </Alert>\n    </Fragment>\n  );\n};\n\nexport default LivePreviewExample;\n","import React, { Fragment } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { Alert } from 'reactstrap';\n\nexport default function LivePreviewExample() {\n  return (\n    <Fragment>\n      <Alert className=\"alerts-alternate\" color=\"success\">\n        <div className=\"d-flex align-items-center align-content-start\">\n          <span className=\"font-size-lg d-block d-40 mr-3 text-center bg-success text-white rounded-sm\">\n            <FontAwesomeIcon icon={['far', 'object-group']} />\n          </span>\n          <span>\n            <strong className=\"d-block\">Success!</strong> This is a success\n            alert—check it out!\n          </span>\n        </div>\n      </Alert>\n      <Alert className=\"alerts-alternate\" color=\"info\">\n        <div className=\"d-flex align-items-center align-content-start\">\n          <span className=\"font-size-lg d-block d-40 mr-3 text-center bg-info text-white rounded-sm\">\n            <FontAwesomeIcon icon={['far', 'building']} />\n          </span>\n          <span>\n            <strong className=\"d-block\">Info!</strong> This is an info\n            alert—check it out!\n          </span>\n        </div>\n      </Alert>\n      <Alert className=\"alerts-alternate\" color=\"warning\">\n        <div className=\"d-flex align-items-center align-content-start\">\n          <span className=\"font-size-lg d-block d-40 mr-3 text-center bg-warning text-white rounded-sm\">\n            <FontAwesomeIcon icon={['far', 'question-circle']} />\n          </span>\n          <span>\n            <strong className=\"d-block\">Warning!</strong> This is a warning\n            alert—check it out!\n          </span>\n        </div>\n      </Alert>\n      <Alert className=\"alerts-alternate\" color=\"danger\">\n        <div className=\"d-flex align-items-center align-content-start\">\n          <span className=\"font-size-lg d-block d-40 mr-3 text-center bg-danger text-white rounded-sm\">\n            <FontAwesomeIcon icon={['far', 'keyboard']} />\n          </span>\n          <span>\n            <strong className=\"d-block\">Danger!</strong> This is an error\n            alert—check it out!\n          </span>\n        </div>\n      </Alert>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { PageTitle } from '../../layout-components';\n\nimport { ExampleWrapperSimple } from '../../layout-components';\nimport NotificationsSweetalerts from '../../example-components/Notifications/NotificationsSweetalerts';\nimport NotificationsToastr from '../../example-components/Notifications/NotificationsToastr';\nimport NotificationsToasts from '../../example-components/Notifications/NotificationsToasts';\nimport NotificationsAlertsBasic from '../../example-components/Notifications/NotificationsAlertsBasic';\nimport NotificationsAlertsDismissible from '../../example-components/Notifications/NotificationsAlertsDismissible';\nimport NotificationsAlertsAlternateStyle from '../../example-components/Notifications/NotificationsAlertsAlternateStyle';\nexport default function Notifications() {\n  return (\n    <Fragment>\n      <PageTitle\n        titleHeading=\"Notifications\"\n        titleDescription=\"Show beautiful, animated growl like notifications or alerts on your pages screens.\"\n      />\n\n      <ExampleWrapperSimple sectionHeading=\"Basic alerts\">\n        <NotificationsAlertsBasic />\n      </ExampleWrapperSimple>\n\n      <ExampleWrapperSimple sectionHeading=\"Alerts alternate style\">\n        <NotificationsAlertsAlternateStyle />\n      </ExampleWrapperSimple>\n\n      <ExampleWrapperSimple sectionHeading=\"Alerts dismissible\">\n        <NotificationsAlertsDismissible />\n      </ExampleWrapperSimple>\n\n      <ExampleWrapperSimple sectionHeading=\"Sweetalerts\">\n        <NotificationsSweetalerts />\n      </ExampleWrapperSimple>\n      <ExampleWrapperSimple sectionHeading=\"Toastr\">\n        <NotificationsToastr />\n      </ExampleWrapperSimple>\n\n      <ExampleWrapperSimple sectionHeading=\"Toasts\">\n        <NotificationsToasts />\n      </ExampleWrapperSimple>\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}